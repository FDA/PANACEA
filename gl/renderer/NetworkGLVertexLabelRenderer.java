package com.eng.cber.na.gl.renderer;

import java.awt.Color;
import java.awt.geom.Point2D;
import java.nio.CharBuffer;

import javax.media.opengl.GL2;
import javax.media.opengl.GLAutoDrawable;

import com.eng.cber.na.gl.GLRenderContext;
import com.eng.cber.na.gl.renderer.GLRenderer.VertexLabelRenderer;
import com.eng.cber.na.gl.shape.GLShape;
import com.eng.cber.na.layout.Layout;


/**
 * A class that renders vertex labels using OpenGL methods.
 * 
 * Label rendering is done through actual bitmaps -- turning particular
 * pixels on and off depending on which characters need to 
 * be displayed.  It is raster graphics rather than vector
 * graphics.
 *
 */
public class NetworkGLVertexLabelRenderer<V, E> implements VertexLabelRenderer<V, E> {
	
	/** 0x20 through 0x7E
	 * This defines the font.  Each subarray represents a character that
	 * is 8 pixels wide by 16 pixels tall. Each hexadecimal number defines
	 * the 8 bits that make up a row.
	 * The byte primitive in Java is signed, so we can't convert a hex
	 * value above 0x7f into a byte.  Fortunately, this isn't a problem for now. 
	 */
	private static final byte[][] CHARSET = {
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//space
		{0x00,0x00,0x08,0x08,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,0x00,0x00},//!
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x22,0x22,0x00,0x00},//"
		{0x00,0x00,0x48,0x48,0x48,0x7E,0x24,0x24,0x7E,0x12,0x12,0x12,0x00,0x00,0x00,0x00},//#
		{0x00,0x00,0x08,0x3E,0x49,0x09,0x0E,0x38,0x48,0x49,0x3E,0x08,0x00,0x00,0x00,0x00},//$
		{0x00,0x00,0x46,0x29,0x29,0x16,0x08,0x08,0x34,0x4A,0x4A,0x31,0x00,0x00,0x00,0x00},//%
		{0x00,0x00,0x39,0x46,0x42,0x45,0x39,0x1C,0x22,0x22,0x22,0x1C,0x00,0x00,0x00,0x00},//&
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x00,0x00},//'
		{0x00,0x04,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x08,0x08,0x04,0x00,0x00,0x00},//(
		{0x00,0x20,0x10,0x10,0x08,0x08,0x08,0x08,0x08,0x08,0x10,0x10,0x20,0x00,0x00,0x00},//)
		{0x00,0x00,0x00,0x08,0x49,0x2A,0x1C,0x2A,0x49,0x08,0x00,0x00,0x00,0x00,0x00,0x00},//*
		{0x00,0x00,0x00,0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00},//+
		{0x10,0x08,0x08,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//,
		{0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//-
		{0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//.
		{0x00,0x00,0x40,0x40,0x20,0x10,0x10,0x08,0x08,0x04,0x02,0x02,0x00,0x00,0x00,0x00},///
		{0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00,0x00,0x00},//0
		{0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x28,0x18,0x08,0x00,0x00,0x00,0x00},//1
		{0x00,0x00,0x7E,0x40,0x40,0x20,0x10,0x0C,0x02,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//2
		{0x00,0x00,0x3C,0x42,0x42,0x02,0x02,0x1C,0x02,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//3
		{0x00,0x00,0x04,0x04,0x04,0x7E,0x44,0x44,0x24,0x14,0x0C,0x04,0x00,0x00,0x00,0x00},//4
		{0x00,0x00,0x3C,0x42,0x02,0x02,0x02,0x7C,0x40,0x40,0x40,0x7E,0x00,0x00,0x00,0x00},//5
		{0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x7C,0x40,0x40,0x20,0x1C,0x00,0x00,0x00,0x00},//6
		{0x00,0x00,0x08,0x08,0x08,0x08,0x04,0x04,0x04,0x02,0x02,0x7E,0x00,0x00,0x00,0x00},//7
		{0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x3C,0x42,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//8
		{0x00,0x00,0x38,0x04,0x02,0x02,0x02,0x3E,0x42,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//9
		{0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00},//:
		{0x00,0x10,0x08,0x08,0x18,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00},//;
		{0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00},//<
		{0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//=
		{0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x08,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00},//>
		{0x00,0x00,0x08,0x08,0x00,0x08,0x08,0x04,0x02,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//?
		{0x00,0x00,0x1E,0x20,0x4E,0x52,0x52,0x52,0x56,0x4A,0x22,0x1C,0x00,0x00,0x00,0x00},//@
		{0x00,0x00,0x42,0x42,0x42,0x42,0x7E,0x42,0x42,0x24,0x24,0x18,0x00,0x00,0x00,0x00},//A
		{0x00,0x00,0x7C,0x42,0x42,0x42,0x42,0x7C,0x42,0x42,0x42,0x7C,0x00,0x00,0x00,0x00},//B
		{0x00,0x00,0x3C,0x42,0x42,0x40,0x40,0x40,0x40,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//C
		{0x00,0x00,0x78,0x44,0x42,0x42,0x42,0x42,0x42,0x42,0x44,0x78,0x00,0x00,0x00,0x00},//D
		{0x00,0x00,0x7E,0x40,0x40,0x40,0x40,0x7C,0x40,0x40,0x40,0x7E,0x00,0x00,0x00,0x00},//E
		{0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x7C,0x40,0x40,0x40,0x7E,0x00,0x00,0x00,0x00},//F
		{0x00,0x00,0x3A,0x46,0x42,0x42,0x4E,0x40,0x40,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//G
		{0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x42,0x00,0x00,0x00,0x00},//H
		{0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3E,0x00,0x00,0x00,0x00},//I
		{0x00,0x00,0x38,0x44,0x44,0x04,0x04,0x04,0x04,0x04,0x04,0x1F,0x00,0x00,0x00,0x00},//J
		{0x00,0x00,0x42,0x44,0x48,0x50,0x60,0x60,0x50,0x48,0x44,0x42,0x00,0x00,0x00,0x00},//K
		{0x00,0x00,0x7E,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,0x00,0x00},//L
		{0x00,0x00,0x42,0x42,0x42,0x42,0x5A,0x5A,0x66,0x66,0x42,0x42,0x00,0x00,0x00,0x00},//M
		{0x00,0x00,0x42,0x46,0x46,0x4A,0x4A,0x52,0x52,0x62,0x62,0x42,0x00,0x00,0x00,0x00},//N
		{0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//O
		{0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x7C,0x42,0x42,0x42,0x7C,0x00,0x00,0x00,0x00},//P
		{0x00,0x03,0x3C,0x66,0x5A,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//Q
		{0x00,0x00,0x42,0x42,0x44,0x44,0x48,0x7C,0x42,0x42,0x42,0x7C,0x00,0x00,0x00,0x00},//R
		{0x00,0x00,0x3C,0x42,0x42,0x02,0x0C,0x30,0x40,0x42,0x42,0x3C,0x00,0x00,0x00,0x00},//S
		{0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x7F,0x00,0x00,0x00,0x00},//T
		{0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,0x00,0x00},//U
		{0x00,0x00,0x08,0x08,0x14,0x14,0x22,0x22,0x22,0x41,0x41,0x41,0x00,0x00,0x00,0x00},//V
		{0x00,0x00,0x42,0x42,0x66,0x66,0x5A,0x5A,0x42,0x42,0x42,0x42,0x00,0x00,0x00,0x00},//W
		{0x00,0x00,0x42,0x42,0x24,0x24,0x18,0x18,0x24,0x24,0x42,0x42,0x00,0x00,0x00,0x00},//X
		{0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x14,0x22,0x22,0x41,0x41,0x00,0x00,0x00,0x00},//Y
		{0x00,0x00,0x7E,0x40,0x40,0x20,0x10,0x08,0x04,0x02,0x02,0x7E,0x00,0x00,0x00,0x00},//Z
		{0x00,0x0E,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x0E,0x00,0x00,0x00},//[
		{0x00,0x00,0x02,0x02,0x04,0x08,0x08,0x10,0x10,0x20,0x40,0x40,0x00,0x00,0x00,0x00},//\
		{0x00,0x70,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x70,0x00,0x00,0x00},//]
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x42,0x24,0x18,0x00,0x00},//^
		{0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//_
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x20,0x00},//`
		{0x00,0x00,0x3A,0x46,0x42,0x42,0x3E,0x02,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00},//a
		{0x00,0x00,0x5C,0x62,0x42,0x42,0x42,0x42,0x62,0x5C,0x40,0x40,0x40,0x00,0x00,0x00},//b
		{0x00,0x00,0x3C,0x42,0x40,0x40,0x40,0x40,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00},//c
		{0x00,0x00,0x3A,0x46,0x42,0x42,0x42,0x42,0x46,0x3A,0x02,0x02,0x02,0x00,0x00,0x00},//d
		{0x00,0x00,0x3C,0x42,0x40,0x40,0x7E,0x42,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00},//e
		{0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x10,0x10,0x10,0x0C,0x00,0x00,0x00},//f
		{0x3C,0x42,0x42,0x3C,0x20,0x38,0x44,0x44,0x44,0x3A,0x02,0x00,0x00,0x00,0x00,0x00},//g
		{0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x62,0x5C,0x40,0x40,0x40,0x00,0x00,0x00},//h
		{0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x18,0x00,0x08,0x08,0x00,0x00,0x00},//i
		{0x30,0x48,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x0C,0x00,0x04,0x04,0x00,0x00,0x00},//j
		{0x00,0x00,0x42,0x44,0x48,0x50,0x60,0x50,0x48,0x44,0x40,0x40,0x00,0x00,0x00,0x00},//k
		{0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x18,0x00,0x00,0x00,0x00},//l
		{0x00,0x00,0x49,0x49,0x49,0x49,0x49,0x49,0x49,0x76,0x00,0x00,0x00,0x00,0x00,0x00},//m
		{0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x62,0x5C,0x00,0x00,0x00,0x00,0x00,0x00},//n
		{0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00},//o
		{0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x42,0x62,0x5C,0x00,0x00,0x00,0x00,0x00,0x00},//p
		{0x02,0x02,0x3A,0x46,0x42,0x42,0x42,0x42,0x46,0x3A,0x00,0x00,0x00,0x00,0x00,0x00},//q
		{0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x42,0x62,0x5C,0x00,0x00,0x00,0x00,0x00,0x00},//r
		{0x00,0x00,0x3C,0x42,0x02,0x0C,0x30,0x40,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00},//s
		{0x00,0x00,0x0C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x10,0x10,0x00,0x00,0x00,0x00},//t
		{0x00,0x00,0x3A,0x46,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,0x00},//u
		{0x00,0x00,0x18,0x18,0x24,0x24,0x24,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,0x00},//v
		{0x00,0x00,0x36,0x49,0x49,0x49,0x49,0x49,0x49,0x41,0x00,0x00,0x00,0x00,0x00,0x00},//w
		{0x00,0x00,0x42,0x42,0x24,0x18,0x18,0x24,0x42,0x42,0x00,0x00,0x00,0x00,0x00,0x00},//x
		{0x3C,0x02,0x02,0x1A,0x26,0x42,0x42,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,0x00},//y
		{0x00,0x00,0x7E,0x40,0x20,0x10,0x08,0x04,0x02,0x7E,0x00,0x00,0x00,0x00,0x00,0x00},//z
		{0x00,0x0C,0x10,0x10,0x08,0x08,0x10,0x10,0x08,0x08,0x10,0x10,0x0C,0x00,0x00,0x00},//{
		{0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00},//|
		{0x00,0x30,0x08,0x08,0x10,0x10,0x08,0x08,0x10,0x10,0x08,0x08,0x30,0x00,0x00,0x00},//}
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x49,0x31,0x00,0x00,0x00} //~
	};
	
	/** A second font (in bold) **/
	private static final byte[][] LARGECHARSET = {
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x24,0x24,0x24,0x00},
		{0x00,0x00,0x00,0x68,0x28,0x28,0x7e,0x7e,0x24,0x34,0x7e,0x7e,0x14,0x16,0x12,0x00},
		{0x00,0x10,0x10,0x38,0x7c,0x54,0x14,0x1c,0x38,0x70,0x70,0x78,0x38,0x10,0x10,0x00},
		{0x00,0x00,0x00,0x0c,0x12,0x12,0x12,0x4c,0x20,0x08,0x64,0x50,0x10,0x50,0x60,0x00},
		{0x00,0x00,0x00,0x1e,0x3e,0x66,0x6e,0x6a,0x3a,0x38,0x10,0x20,0x24,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x00},
		{0x00,0x08,0x08,0x18,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x18,0x08,0x08,0x00},
		{0x00,0x20,0x10,0x10,0x10,0x10,0x18,0x18,0x18,0x18,0x10,0x10,0x10,0x10,0x20,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x54,0x38,0x38,0x54,0x10,0x10,0x00},
		{0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x7e,0x7e,0x18,0x18,0x18,0x00,0x00,0x00,0x00},
		{0x00,0x10,0x10,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x60,0x20,0x20,0x30,0x10,0x10,0x18,0x08,0x08,0x0c,0x04,0x04,0x06,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x24,0x66,0x66,0x7e,0x7e,0x66,0x66,0x24,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x38,0x38,0x18,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x20,0x10,0x18,0x08,0x04,0x04,0x06,0x46,0x7c,0x38,0x00},
		{0x00,0x00,0x00,0x38,0x7c,0x46,0x06,0x06,0x1c,0x1c,0x06,0x06,0x46,0x7c,0x38,0x00},
		{0x00,0x00,0x00,0x04,0x04,0x04,0x7e,0x7e,0x64,0x24,0x34,0x14,0x1c,0x0c,0x0c,0x00},
		{0x00,0x00,0x00,0x38,0x7c,0x46,0x06,0x06,0x46,0x7c,0x78,0x60,0x60,0x7c,0x7c,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x26,0x66,0x66,0x66,0x7c,0x7c,0x60,0x24,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x30,0x10,0x10,0x18,0x18,0x08,0x08,0x0c,0x04,0x04,0x7e,0x7e,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x66,0x66,0x66,0x3c,0x3c,0x66,0x66,0x66,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x24,0x06,0x3e,0x3e,0x66,0x66,0x66,0x64,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x00,0x00,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x10,0x10,0x18,0x18,0x18,0x00,0x00,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x00,0x02,0x0e,0x38,0x70,0x70,0x3c,0x0e,0x02,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x7e,0x7e,0x00,0x00,0x7e,0x7e,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x00,0x40,0x70,0x1c,0x0e,0x0e,0x3c,0x70,0x40,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x10,0x10,0x00,0x10,0x10,0x10,0x18,0x0c,0x04,0x44,0x7c,0x38,0x00},
		{0x00,0x1c,0x3e,0x64,0x60,0x5e,0x5e,0x56,0x5e,0x5e,0x66,0x64,0x3c,0x18,0x00,0x00},
		{0x00,0x00,0x00,0x66,0x24,0x24,0x3c,0x3c,0x24,0x3c,0x18,0x18,0x18,0x18,0x18,0x00},
		{0x00,0x00,0x00,0x7c,0x7c,0x66,0x66,0x66,0x7c,0x7c,0x66,0x66,0x66,0x7c,0x7c,0x00},
		{0x00,0x00,0x00,0x1c,0x3e,0x32,0x20,0x60,0x60,0x60,0x60,0x20,0x32,0x3e,0x1c,0x00},
		{0x00,0x00,0x00,0x78,0x7c,0x6c,0x66,0x66,0x66,0x66,0x66,0x66,0x6c,0x7c,0x78,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x60,0x60,0x60,0x7c,0x7c,0x60,0x60,0x60,0x7e,0x7e,0x00},
		{0x00,0x00,0x00,0x60,0x60,0x60,0x60,0x60,0x7c,0x7c,0x60,0x60,0x60,0x7e,0x7e,0x00},
		{0x00,0x00,0x00,0x1c,0x3e,0x26,0x26,0x6e,0x6e,0x60,0x60,0x20,0x32,0x3e,0x1c,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x66,0x7e,0x7e,0x66,0x66,0x66,0x66,0x66,0x00},
		{0x00,0x00,0x00,0x3c,0x3c,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x3c,0x00},
		{0x00,0x00,0x00,0x3c,0x7c,0x46,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x1e,0x1e,0x00},
		{0x00,0x00,0x00,0x66,0x64,0x6c,0x6c,0x68,0x78,0x78,0x78,0x78,0x68,0x6c,0x66,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x7e,0x7e,0x7e,0x7e,0x7e,0x66,0x66,0x66,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x6e,0x6e,0x6e,0x6e,0x76,0x76,0x76,0x76,0x66,0x66,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x24,0x66,0x66,0x66,0x66,0x66,0x66,0x24,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x60,0x60,0x60,0x60,0x60,0x78,0x7c,0x66,0x66,0x66,0x7c,0x78,0x00},
		{0x00,0x04,0x04,0x1c,0x3c,0x24,0x66,0x66,0x66,0x66,0x66,0x66,0x24,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x66,0x64,0x6c,0x7c,0x7c,0x66,0x66,0x66,0x7c,0x7c,0x00},
		{0x00,0x00,0x00,0x3c,0x7c,0x46,0x06,0x06,0x1c,0x38,0x70,0x60,0x64,0x3c,0x18,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x7e,0x7e,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x3c,0x3c,0x24,0x24,0x24,0x24,0x24,0x66,0x00},
		{0x00,0x00,0x00,0x24,0x66,0x66,0x76,0x7e,0x7e,0x7e,0x5a,0x5a,0x42,0x42,0x42,0x00},
		{0x00,0x00,0x00,0x66,0x24,0x3c,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x24,0x66,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x3c,0x24,0x66,0x66,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x20,0x30,0x30,0x18,0x18,0x08,0x0c,0x04,0x7e,0x7e,0x00},
		{0x00,0x18,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x18,0x00},
		{0x00,0x00,0x06,0x04,0x04,0x0c,0x08,0x08,0x18,0x10,0x10,0x30,0x20,0x20,0x60,0x00},
		{0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x38,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x2c,0x38,0x18,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x7e},
		{0x00,0x00,0x00,0x3e,0x3e,0x66,0x66,0x3e,0x1e,0x26,0x3c,0x1c,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x7c,0x7c,0x66,0x66,0x66,0x66,0x66,0x7c,0x78,0x60,0x60,0x60,0x00},
		{0x00,0x00,0x00,0x1c,0x3e,0x22,0x60,0x60,0x60,0x22,0x3e,0x1c,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x3e,0x3e,0x66,0x66,0x66,0x66,0x66,0x3e,0x1e,0x06,0x06,0x06,0x00},
		{0x00,0x00,0x00,0x1c,0x3e,0x22,0x60,0x7e,0x7e,0x26,0x3c,0x18,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x7c,0x7c,0x10,0x1c,0x1c,0x00},
		{0x1c,0x3c,0x26,0x1e,0x3e,0x66,0x66,0x66,0x66,0x26,0x3e,0x1e,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x7c,0x7c,0x60,0x60,0x60,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x18,0x18,0x18,0x18,0x18,0x38,0x38,0x00,0x18,0x18,0x18},
		{0x70,0x70,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x38,0x38,0x00,0x18,0x18,0x18},
		{0x00,0x00,0x00,0x64,0x6c,0x6c,0x68,0x78,0x70,0x78,0x68,0x6c,0x60,0x60,0x60,0x00},
		{0x00,0x00,0x00,0x1c,0x1c,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x70,0x70,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x7e,0x7e,0x7e,0x7e,0x7e,0x7e,0x74,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x7c,0x7c,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x18,0x3c,0x24,0x66,0x66,0x66,0x24,0x3c,0x18,0x00,0x00,0x00,0x00},
		{0x60,0x60,0x60,0x78,0x7c,0x66,0x66,0x66,0x66,0x66,0x7c,0x78,0x00,0x00,0x00,0x00},
		{0x06,0x06,0x06,0x1e,0x3e,0x66,0x66,0x66,0x66,0x66,0x3e,0x1e,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x30,0x3e,0x2e,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x3c,0x7e,0x46,0x06,0x3c,0x78,0x62,0x7e,0x3c,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x1c,0x1c,0x10,0x10,0x10,0x10,0x10,0x7c,0x7c,0x10,0x10,0x00,0x00},
		{0x00,0x00,0x00,0x3e,0x3e,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x18,0x18,0x18,0x3c,0x3c,0x24,0x24,0x24,0x66,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x24,0x24,0x3c,0x7e,0x5a,0x5a,0x5a,0x42,0x42,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x66,0x2c,0x3c,0x18,0x18,0x18,0x3c,0x3c,0x24,0x00,0x00,0x00,0x00},
		{0x30,0x30,0x18,0x18,0x18,0x18,0x18,0x1c,0x34,0x24,0x24,0x66,0x00,0x00,0x00,0x00},
		{0x00,0x00,0x00,0x7e,0x7e,0x30,0x30,0x18,0x08,0x0c,0x7e,0x7e,0x00,0x00,0x00,0x00},
		{0x0c,0x18,0x18,0x18,0x18,0x18,0x18,0x30,0x18,0x18,0x18,0x18,0x18,0x18,0x0c,0x00},
		{0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00},
		{0x30,0x18,0x18,0x18,0x18,0x18,0x18,0x0c,0x18,0x18,0x18,0x18,0x18,0x18,0x30,0x18},
		{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4c,0x7e,0x32,0x00,0x00,0x00,0x00,0x00,0x00}
	};
		
	private int charsetOffset;
	private int largeCharsetOffset;
	
	// Implemented using a rasterized font and display lists
	public NetworkGLVertexLabelRenderer(GLAutoDrawable glautodrawable) {
		GL2 gl2 = glautodrawable.getGL().getGL2();
		charsetOffset = gl2.glGenLists(0x20 + CHARSET.length);
		gl2.glPixelStorei(GL2.GL_UNPACK_ALIGNMENT, 1);
		for(int i = 0; i < CHARSET.length; i++) {
			gl2.glNewList(charsetOffset + 0x20 + i, GL2.GL_COMPILE);
			gl2.glBitmap(8, 16, 0.0f, 0.0f, 8.0f, 0.0f, CHARSET[i], 0);
			gl2.glEndList();
		}

		// A second character set.
		// One extra pixel in between each character.
		largeCharsetOffset = gl2.glGenLists(0x20 + CHARSET.length + 0x20 + LARGECHARSET.length);
		gl2.glPixelStorei(GL2.GL_UNPACK_ALIGNMENT, 1);
		for(int i = 0; i < LARGECHARSET.length; i++) {
			gl2.glNewList(largeCharsetOffset + 0x20 + i, GL2.GL_COMPILE);
			gl2.glBitmap(8, 16, 0.0f, 0.0f, 9.0f, 0.0f, LARGECHARSET[i], 0);
			gl2.glEndList();
		}
	}
	
	@Override
	public void renderVertexLabel(GLRenderContext<V, E> glRenderContext, Layout<V, E> layout, V v) {
		GLAutoDrawable glAutoDrawable = glRenderContext.getGLAutoDrawable();
		GLShape shape = glRenderContext.getVertexShapeTransformer().transform(v);
		String label = glRenderContext.getVertexLabelTransformer().transform(v);
		Color color = (Color)glRenderContext.getVertexLabelPaintTransformer().transform(v);
		boolean isBold = glRenderContext.getVertexLabelBoldedTransformer().transform(v);
		
		if(label.length() > 0) {
			GL2 gl2 = glAutoDrawable.getGL().getGL2();
			
			Point2D p = layout.transform(v);
			p = glRenderContext.getMultiLayerTransformer().transform(p);
	    	
			gl2.glColor4f((float)color.getRed()/255, (float)color.getGreen()/255, (float)color.getBlue()/255, (float)color.getAlpha()/255);  
			gl2.glRasterPos2d(p.getX() + shape.getRadius() + glRenderContext.getLabelOffset(), glAutoDrawable.getHeight() - p.getY() - 6);
			CharBuffer labelBuffer = CharBuffer.wrap(label.toCharArray());
			
			gl2.glPushAttrib(GL2.GL_LIST_BIT);
			gl2.glListBase(isBold ? largeCharsetOffset : charsetOffset);
			gl2.glCallLists(2*labelBuffer.length(), GL2.GL_BYTE, labelBuffer);
			gl2.glPopAttrib();
			gl2.glFlush();
		}
	}

}
